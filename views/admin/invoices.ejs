<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Action Jackson Admin</title>
    
    <!-- Security Headers -->
    <meta http-equiv="X-Content-Type-Options" content="nosniff">
    <meta name="referrer" content="strict-origin-when-cross-origin">
    
    <!-- CSS -->
    <link rel="stylesheet" href="/styles/business.css">
    <link rel="stylesheet" href="/styles/admin.css">
    <!-- Font Awesome Kit  -->
    <script src="https://kit.fontawesome.com/8623ae8306.js" crossorigin="anonymous"></script>
</head>
<body>
    <div class="admin-layout">
        <%- include('../partials/admin-sidebar', { currentPage: 'invoices' }) %>

        <main class="admin-content">
            <div class="content-header">
                <h1>Invoice Management</h1>
                <button class="logout-btn" id="logoutBtn">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </div>

            <div class="filters-section">
                <form class="filters-grid" method="GET">
                    <div class="filter-group">
                        <label class="filter-label" for="search">Search Invoices</label>
                        <input 
                            type="text" 
                            id="search" 
                            name="search" 
                            class="filter-input"
                            placeholder="Invoice number, customer name, or email..."
                            value="<%= filters.search %>"
                        >
                    </div>

                    <div class="filter-group">
                        <label class="filter-label" for="status">Status</label>
                        <select id="status" name="status" class="filter-input">
                            <option value="">All Status</option>
                            <option value="draft" <%= filters.status === 'draft' ? 'selected' : '' %>>Draft</option>
                            <option value="sent" <%= filters.status === 'sent' ? 'selected' : '' %>>Sent</option>
                            <option value="paid" <%= filters.status === 'paid' ? 'selected' : '' %>>Paid</option>
                            <option value="overdue" <%= filters.status === 'overdue' ? 'selected' : '' %>>Overdue</option>
                            <option value="cancelled" <%= filters.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <label class="filter-label" for="sort">Sort By</label>
                        <select id="sort" name="sort" class="filter-input">
                            <option value="newest" <%= filters.sort === 'newest' ? 'selected' : '' %>>Newest First</option>
                            <option value="oldest" <%= filters.sort === 'oldest' ? 'selected' : '' %>>Oldest First</option>
                            <option value="amount_high" <%= filters.sort === 'amount_high' ? 'selected' : '' %>>Amount (High to Low)</option>
                            <option value="amount_low" <%= filters.sort === 'amount_low' ? 'selected' : '' %>>Amount (Low to High)</option>
                            <option value="invoice_number" <%= filters.sort === 'invoice_number' ? 'selected' : '' %>>Invoice Number</option>
                        </select>
                    </div>

                    <button type="submit" class="filter-btn">
                        <i class="fas fa-search"></i> Filter
                    </button>
                </form>
            </div>

            <div class="invoices-table">
                <div class="table-header">
                    <h3 class="table-title">
                        <i class="fas fa-receipt"></i>
                        Invoice List
                        <span style="font-weight: normal; color: var(--text-muted);">
                            (<%= pagination.totalCount %> total)
                        </span>
                    </h3>
                </div>

                <div class="invoices-grid">
                    <% if (invoices.length > 0) { %>
                        <table>
                            <thead>
                                <tr>
                                    <th>Invoice #</th>
                                    <th>Customer</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                    <th>Due Date</th>
                                    <th>Created</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% invoices.forEach(function(invoice) { %>
                                    <tr>
                                        <td>
                                            <span class="invoice-number"><%= invoice.invoiceNumber %></span>
                                            <% if (invoice.quoteId) { %>
                                                <br><small style="color: var(--text-muted); font-size: 0.75rem;">
                                                    <i class="fas fa-link"></i> From Quote
                                                </small>
                                            <% } %>
                                        </td>
                                        <td>
                                            <strong><%= invoice.customer.name %></strong>
                                            <% if (invoice.customer.email) { %>
                                                <br><small style="color: var(--text-muted);"><%= invoice.customer.email %></small>
                                            <% } %>
                                        </td>
                                        <td>
                                            <span class="amount">$<%= invoice.finalAmount.toFixed(2) %></span>
                                        </td>
                                        <td>
                                            <span class="status-badge status-<%= invoice.status %>">
                                                <% if (invoice.status === 'draft') { %>
                                                    <i class="fas fa-edit"></i>
                                                <% } else if (invoice.status === 'sent') { %>
                                                    <i class="fas fa-paper-plane"></i>
                                                <% } else if (invoice.status === 'paid') { %>
                                                    <i class="fas fa-check-circle"></i>
                                                <% } else if (invoice.status === 'overdue') { %>
                                                    <i class="fas fa-exclamation-triangle"></i>
                                                <% } else if (invoice.status === 'cancelled') { %>
                                                    <i class="fas fa-times-circle"></i>
                                                <% } %>
                                                <%= invoice.status %>
                                            </span>
                                        </td>
                                        <td><%= invoice.dueDate ? invoice.dueDate.toLocaleDateString() : 'No due date' %></td>
                                        <td><%= invoice.createdAt.toLocaleDateString() %></td>
                                        <td>
                                            <button class="action-btn view-invoice-btn" data-invoice-id="<%= invoice._id %>">
                                                <i class="fas fa-eye"></i> View
                                            </button>
                                            <% if (invoice.status === 'draft') { %>
                                                <button class="action-btn success update-status-btn" data-invoice-id="<%= invoice._id %>" data-status="sent">
                                                    <i class="fas fa-paper-plane"></i> Send
                                                </button>
                                            <% } %>
                                            <% if (invoice.status === 'sent') { %>
                                                <button class="action-btn success update-status-btn" data-invoice-id="<%= invoice._id %>" data-status="paid">
                                                    <i class="fas fa-check"></i> Mark Paid
                                                </button>
                                            <% } %>
                                            <% if (user.role === 'superadmin') { %>
                                                <button class="action-btn danger delete-invoice-btn" data-invoice-id="<%= invoice._id %>">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <div class="empty-state">
                            <div class="empty-icon">
                                <i class="fas fa-receipt"></i>
                            </div>
                            <h3>No Invoices Found</h3>
                            <p>No invoices match your current filters.</p>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Pagination -->
            <% if (pagination.totalPages > 1) { %>
                <div class="pagination">
                    <% if (pagination.hasPrev) { %>
                        <a href="?page=<%= pagination.currentPage - 1 %>&search=<%= filters.search %>&status=<%= filters.status %>&sort=<%= filters.sort %>">
                            <i class="fas fa-chevron-left"></i> Previous
                        </a>
                    <% } %>

                    <% for (let i = 1; i <= pagination.totalPages; i++) { %>
                        <% if (i === pagination.currentPage) { %>
                            <span class="current"><%= i %></span>
                        <% } else { %>
                            <a href="?page=<%= i %>&search=<%= filters.search %>&status=<%= filters.status %>&sort=<%= filters.sort %>">
                                <%= i %>
                            </a>
                        <% } %>
                    <% } %>

                    <% if (pagination.hasNext) { %>
                        <a href="?page=<%= pagination.currentPage + 1 %>&search=<%= filters.search %>&status=<%= filters.status %>&sort=<%= filters.sort %>">
                            Next <i class="fas fa-chevron-right"></i>
                        </a>
                    <% } %>
                </div>
            <% } %>
        </main>
    </div>

    <script>
        // Add event listeners when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Logout button
            document.getElementById('logoutBtn').addEventListener('click', logout);
            
            // View invoice buttons
            document.querySelectorAll('.view-invoice-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const invoiceId = this.getAttribute('data-invoice-id');
                    viewInvoice(invoiceId);
                });
            });
            
            // Update status buttons
            document.querySelectorAll('.update-status-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const invoiceId = this.getAttribute('data-invoice-id');
                    const status = this.getAttribute('data-status');
                    updateStatus(invoiceId, status);
                });
            });
            
            // Delete invoice buttons
            document.querySelectorAll('.delete-invoice-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const invoiceId = this.getAttribute('data-invoice-id');
                    deleteInvoice(invoiceId);
                });
            });
        });

        async function logout() {
            if (confirm('Are you sure you want to logout?')) {
                try {
                    const response = await fetch('/auth/logout', {
                        method: 'POST',
                        credentials: 'include'
                    });

                    if (response.ok) {
                        window.location.href = '/';
                    } else {
                        alert('Logout failed. Please try again.');
                    }
                } catch (error) {
                    console.error('Logout error:', error);
                    alert('Logout error. Please try again.');
                }
            }
        }

        function viewInvoice(id) {
            window.location.href = `/admin/invoices/${id}`;
        }

        async function updateStatus(id, status) {
            const statusLabels = {
                'sent': 'sent',
                'paid': 'paid',
                'overdue': 'overdue',
                'cancelled': 'cancelled'
            };
            
            if (!confirm(`Are you sure you want to mark this invoice as ${statusLabels[status] || status}?`)) {
                return;
            }

            try {
                const response = await fetch(`/admin/invoices/${id}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'include',
                    body: JSON.stringify({ status })
                });

                const data = await response.json();

                if (data.success) {
                    location.reload();
                } else {
                    alert('Failed to update status: ' + data.error);
                }
            } catch (error) {
                console.error('Status update error:', error);
                alert('Error updating status. Please try again.');
            }
        }

        async function deleteInvoice(id) {
            if (!confirm('Are you sure you want to delete this invoice? This action cannot be undone.')) {
                return;
            }

            try {
                const response = await fetch(`/admin/invoices/${id}`, {
                    method: 'DELETE',
                    credentials: 'include'
                });

                const data = await response.json();

                if (data.success) {
                    location.reload();
                } else {
                    alert('Failed to delete invoice: ' + data.error);
                }
            } catch (error) {
                console.error('Delete error:', error);
                alert('Error deleting invoice. Please try again.');
            }
        }
    </script>
</body>
</html>